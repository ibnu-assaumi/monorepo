// Code generated by candi v1.8.8. DO NOT EDIT.

package repository

import (
	"go.mongodb.org/mongo-driver/mongo"

	// @candi:repositoryImport
	masterrepo "monorepo/services/seaotter/internal/modules/master/repository"
	salesorderrepo "monorepo/services/seaotter/internal/modules/salesorder/repository"
)

type (
	// RepoMongo abstraction
	RepoMongo interface {
		// @candi:repositoryMethod
		MasterRepo() masterrepo.MasterRepoMongo
		SalesorderRepo() salesorderrepo.SalesorderRepository
	}

	repoMongoImpl struct {
		readDB, writeDB *mongo.Database

		// register all repository from modules
		// @candi:repositoryField
		masterRepo     masterrepo.MasterRepoMongo
		salesorderRepo salesorderrepo.SalesorderRepository
	}
)

var globalRepoMongo RepoMongo

// setSharedRepoMongo set the global singleton "RepoMongo" implementation
func setSharedRepoMongo(readDB, writeDB *mongo.Database) {
	globalRepoMongo = &repoMongoImpl{
		readDB: readDB, writeDB: writeDB,

		// @candi:repositoryConstructor
		masterRepo:     masterrepo.NewMasterRepoMongo(readDB, writeDB),
		salesorderRepo: salesorderrepo.NewSalesorderRepoMongo(readDB, writeDB),
	}
}

// GetSharedRepoMongo returns the global singleton "RepoMongo" implementation
func GetSharedRepoMongo() RepoMongo {
	return globalRepoMongo
}

// @candi:repositoryImplementation
func (r *repoMongoImpl) MasterRepo() masterrepo.MasterRepoMongo {
	return r.masterRepo
}

func (r *repoMongoImpl) SalesorderRepo() salesorderrepo.SalesorderRepository {
	return r.salesorderRepo
}
